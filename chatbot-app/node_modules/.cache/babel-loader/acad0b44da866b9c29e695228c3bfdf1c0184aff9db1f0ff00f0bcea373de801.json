{"ast":null,"code":"import React,{useRef,useEffect,useState}from'react';import Header from'../components/Header';import Message from'../components/Message';import ChatInput from'../components/ChatInput';import ErrorAlert from'../components/ErrorAlert';import LoadingSpinner from'../components/LoadingSpinner';import TypingIndicator from'../components/TypingIndicator';import OpenAISettings from'../components/OpenAISettings';import useChat from'../hooks/useChat';import{useOpenAI}from'../hooks/useOpenAI';import{KeyIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Chat=()=>{const{messages,loading,isTyping,error,sendMessage}=useChat();const{apiKey,isValidKey}=useOpenAI();const[showError,setShowError]=useState(!!error);const[showApiSettings,setShowApiSettings]=useState(false);const messagesEndRef=useRef(null);// Scroll to bottom when messages change\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages,isTyping]);// Show error when error state changes\nuseEffect(()=>{setShowError(!!error);},[error]);// Check if API key is set on first load\nuseEffect(()=>{if(!apiKey&&!loading){setShowApiSettings(true);}},[apiKey,loading]);return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen flex flex-col bg-gray-50 dark:bg-dark-800 transition-colors duration-200\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 overflow-hidden flex flex-col max-w-5xl w-full mx-auto\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-4 bg-white shadow-sm dark:bg-dark-700 dark:text-white transition-colors duration-200\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"text-xl font-bold text-gray-800 dark:text-white flex items-center gap-2\",children:[/*#__PURE__*/_jsx(SparklesIcon,{className:`h-5 w-5 ${isValidKey?'text-green-500':'text-gray-400'}`}),\"AI Chat Assistant\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[apiKey&&/*#__PURE__*/_jsx(\"span\",{className:`text-xs px-2 py-1 rounded-full ${isValidKey?'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300':'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300'}`,children:isValidKey?'GPT Enabled':'GPT Disabled'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowApiSettings(true),className:\"p-1.5 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300 rounded-full hover:bg-gray-100 dark:hover:bg-dark-600\",\"aria-label\":\"OpenAI API Settings\",children:/*#__PURE__*/_jsx(KeyIcon,{className:\"h-5 w-5\"})})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 overflow-y-auto p-6 bg-grid-pattern dark:bg-grid-pattern-dark bg-fixed\",children:[showError&&error&&/*#__PURE__*/_jsx(ErrorAlert,{message:error,onDismiss:()=>setShowError(false)}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center h-32\",children:[/*#__PURE__*/_jsx(LoadingSpinner,{size:\"md\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-4 text-gray-500 dark:text-gray-400\",children:\"Loading chat history...\"})]}):/*#__PURE__*/_jsx(_Fragment,{children:messages.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"h-full flex flex-col items-center justify-center text-center p-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-16 bg-primary-100 dark:bg-primary-900/30 rounded-full flex items-center justify-center mb-4\",children:/*#__PURE__*/_jsx(SparklesIcon,{className:\"h-8 w-8 text-primary-500 dark:text-primary-400\"})}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-gray-800 dark:text-white mb-2\",children:\"Welcome to AI Chat\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-300 max-w-md mb-6\",children:\"Get instant, intelligent responses. Ask questions, get creative content, or just have a conversation.\"}),!apiKey&&/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowApiSettings(true),className:\"btn btn-primary btn-dark gap-2\",children:[/*#__PURE__*/_jsx(KeyIcon,{className:\"h-5 w-5\"}),\"Connect OpenAI API\"]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4 pb-2\",children:[messages.map(message=>/*#__PURE__*/_jsx(Message,{content:message.content,timestamp:message.timestamp,isUser:message.isUser},message._id)),isTyping&&/*#__PURE__*/_jsx(TypingIndicator,{}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-auto border-t border-gray-200 dark:border-dark-600\",children:/*#__PURE__*/_jsx(ChatInput,{onSendMessage:sendMessage,disabled:loading||isTyping})})]}),showApiSettings&&/*#__PURE__*/_jsx(OpenAISettings,{onClose:()=>setShowApiSettings(false)})]});};export default Chat;","map":{"version":3,"names":["React","useRef","useEffect","useState","Header","Message","ChatInput","ErrorAlert","LoadingSpinner","TypingIndicator","OpenAISettings","useChat","useOpenAI","KeyIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chat","messages","loading","isTyping","error","sendMessage","apiKey","isValidKey","showError","setShowError","showApiSettings","setShowApiSettings","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","SparklesIcon","onClick","message","onDismiss","size","length","map","content","timestamp","isUser","_id","ref","onSendMessage","disabled","onClose"],"sources":["C:/Users/alamk/OneDrive/Desktop/Chatbot/chatbot-app/src/pages/Chat.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport Message from '../components/Message';\r\nimport ChatInput from '../components/ChatInput';\r\nimport ErrorAlert from '../components/ErrorAlert';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport TypingIndicator from '../components/TypingIndicator';\r\nimport OpenAISettings from '../components/OpenAISettings';\r\nimport useChat from '../hooks/useChat';\r\nimport { useOpenAI } from '../hooks/useOpenAI';\r\nimport { KeyIcon } from '@heroicons/react/24/outline';\r\n\r\nconst Chat: React.FC = () => {\r\n  const { messages, loading, isTyping, error, sendMessage } = useChat();\r\n  const { apiKey, isValidKey } = useOpenAI();\r\n  const [showError, setShowError] = useState<boolean>(!!error);\r\n  const [showApiSettings, setShowApiSettings] = useState<boolean>(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages, isTyping]);\r\n\r\n  // Show error when error state changes\r\n  useEffect(() => {\r\n    setShowError(!!error);\r\n  }, [error]);\r\n\r\n  // Check if API key is set on first load\r\n  useEffect(() => {\r\n    if (!apiKey && !loading) {\r\n      setShowApiSettings(true);\r\n    }\r\n  }, [apiKey, loading]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col bg-gray-50 dark:bg-dark-800 transition-colors duration-200\">\r\n      <Header />\r\n      <div className=\"flex-1 overflow-hidden flex flex-col max-w-5xl w-full mx-auto\">\r\n        <div className=\"p-4 bg-white shadow-sm dark:bg-dark-700 dark:text-white transition-colors duration-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h1 className=\"text-xl font-bold text-gray-800 dark:text-white flex items-center gap-2\">\r\n              <SparklesIcon className={`h-5 w-5 ${isValidKey ? 'text-green-500' : 'text-gray-400'}`} />\r\n              AI Chat Assistant\r\n            </h1>\r\n            \r\n            <div className=\"flex items-center gap-2\">\r\n              {apiKey && (\r\n                <span className={`text-xs px-2 py-1 rounded-full ${isValidKey ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300' : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300'}`}>\r\n                  {isValidKey ? 'GPT Enabled' : 'GPT Disabled'}\r\n                </span>\r\n              )}\r\n              \r\n              <button \r\n                onClick={() => setShowApiSettings(true)}\r\n                className=\"p-1.5 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300 rounded-full hover:bg-gray-100 dark:hover:bg-dark-600\"\r\n                aria-label=\"OpenAI API Settings\"\r\n              >\r\n                <KeyIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex-1 overflow-y-auto p-6 bg-grid-pattern dark:bg-grid-pattern-dark bg-fixed\">\r\n          {showError && error && (\r\n            <ErrorAlert \r\n              message={error} \r\n              onDismiss={() => setShowError(false)} \r\n            />\r\n          )}\r\n          \r\n          {loading ? (\r\n            <div className=\"flex flex-col items-center justify-center h-32\">\r\n              <LoadingSpinner size=\"md\" />\r\n              <p className=\"mt-4 text-gray-500 dark:text-gray-400\">Loading chat history...</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {messages.length === 0 ? (\r\n                <div className=\"h-full flex flex-col items-center justify-center text-center p-6\">\r\n                  <div className=\"w-16 h-16 bg-primary-100 dark:bg-primary-900/30 rounded-full flex items-center justify-center mb-4\">\r\n                    <SparklesIcon className=\"h-8 w-8 text-primary-500 dark:text-primary-400\" />\r\n                  </div>\r\n                  <h2 className=\"text-xl font-bold text-gray-800 dark:text-white mb-2\">Welcome to AI Chat</h2>\r\n                  <p className=\"text-gray-600 dark:text-gray-300 max-w-md mb-6\">\r\n                    Get instant, intelligent responses. Ask questions, get creative content, or just have a conversation.\r\n                  </p>\r\n                  {!apiKey && (\r\n                    <button\r\n                      onClick={() => setShowApiSettings(true)}\r\n                      className=\"btn btn-primary btn-dark gap-2\"\r\n                    >\r\n                      <KeyIcon className=\"h-5 w-5\" />\r\n                      Connect OpenAI API\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"space-y-4 pb-2\">\r\n                  {messages.map((message) => (\r\n                    <Message\r\n                      key={message._id}\r\n                      content={message.content}\r\n                      timestamp={message.timestamp}\r\n                      isUser={message.isUser}\r\n                    />\r\n                  ))}\r\n                  {isTyping && <TypingIndicator />}\r\n                  <div ref={messagesEndRef} />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"mt-auto border-t border-gray-200 dark:border-dark-600\">\r\n          <ChatInput onSendMessage={sendMessage} disabled={loading || isTyping} />\r\n        </div>\r\n      </div>\r\n      \r\n      {showApiSettings && <OpenAISettings onClose={() => setShowApiSettings(false)} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}