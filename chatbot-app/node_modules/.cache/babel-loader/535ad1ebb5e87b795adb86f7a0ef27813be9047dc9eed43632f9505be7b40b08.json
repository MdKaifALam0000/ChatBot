{"ast":null,"code":"/**\r\n * Environment variable utility functions\r\n * \r\n * This file centralizes access to environment variables and provides\r\n * helper functions to safely access them.\r\n */\n\n/**\r\n * Get an environment variable value\r\n * @param key The environment variable key\r\n * @param defaultValue Optional default value if the environment variable is not set\r\n * @returns The environment variable value or the default value\r\n */\nexport const getEnv = (key, defaultValue = '') => {\n  const value = process.env[key];\n  return value !== undefined ? value : defaultValue;\n};\n\n/**\r\n * Get the Google Gemini API key\r\n * @returns The Google Gemini API key\r\n */\nexport const getGeminiApiKey = () => {\n  return getEnv('REACT_APP_GOOGLE_API_KEY');\n};\n\n/**\r\n * Get the API URL\r\n * @returns The API URL\r\n */\nexport const getApiUrl = () => {\n  return getEnv('REACT_APP_API_URL', 'http://localhost:5000/api');\n};\n\n/**\r\n * Get the Socket.IO URL\r\n * @returns The Socket.IO URL\r\n */\nexport const getSocketUrl = () => {\n  return getEnv('REACT_APP_SOCKET_URL', 'http://localhost:5000');\n};\n\n/**\r\n * Check if we're in development mode\r\n * @returns True if we're in development mode\r\n */\nexport const isDevelopment = () => {\n  return process.env.NODE_ENV === 'development';\n};\n\n/**\r\n * Check if we're in production mode\r\n * @returns True if we're in production mode\r\n */\nexport const isProduction = () => {\n  return process.env.NODE_ENV === 'production';\n};","map":{"version":3,"names":["getEnv","key","defaultValue","value","process","env","undefined","getGeminiApiKey","getApiUrl","getSocketUrl","isDevelopment","NODE_ENV","isProduction"],"sources":["C:/Users/alamk/OneDrive/Desktop/Chatbot/chatbot-app/src/utils/env.ts"],"sourcesContent":["/**\r\n * Environment variable utility functions\r\n * \r\n * This file centralizes access to environment variables and provides\r\n * helper functions to safely access them.\r\n */\r\n\r\n/**\r\n * Get an environment variable value\r\n * @param key The environment variable key\r\n * @param defaultValue Optional default value if the environment variable is not set\r\n * @returns The environment variable value or the default value\r\n */\r\nexport const getEnv = (key: string, defaultValue: string = ''): string => {\r\n  const value = process.env[key];\r\n  return value !== undefined ? value : defaultValue;\r\n};\r\n\r\n/**\r\n * Get the Google Gemini API key\r\n * @returns The Google Gemini API key\r\n */\r\nexport const getGeminiApiKey = (): string => {\r\n  return getEnv('REACT_APP_GOOGLE_API_KEY');\r\n};\r\n\r\n/**\r\n * Get the API URL\r\n * @returns The API URL\r\n */\r\nexport const getApiUrl = (): string => {\r\n  return getEnv('REACT_APP_API_URL', 'http://localhost:5000/api');\r\n};\r\n\r\n/**\r\n * Get the Socket.IO URL\r\n * @returns The Socket.IO URL\r\n */\r\nexport const getSocketUrl = (): string => {\r\n  return getEnv('REACT_APP_SOCKET_URL', 'http://localhost:5000');\r\n};\r\n\r\n/**\r\n * Check if we're in development mode\r\n * @returns True if we're in development mode\r\n */\r\nexport const isDevelopment = (): boolean => {\r\n  return process.env.NODE_ENV === 'development';\r\n};\r\n\r\n/**\r\n * Check if we're in production mode\r\n * @returns True if we're in production mode\r\n */\r\nexport const isProduction = (): boolean => {\r\n  return process.env.NODE_ENV === 'production';\r\n}; "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,MAAM,GAAGA,CAACC,GAAW,EAAEC,YAAoB,GAAG,EAAE,KAAa;EACxE,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;EAC9B,OAAOE,KAAK,KAAKG,SAAS,GAAGH,KAAK,GAAGD,YAAY;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMK,eAAe,GAAGA,CAAA,KAAc;EAC3C,OAAOP,MAAM,CAAC,0BAA0B,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMQ,SAAS,GAAGA,CAAA,KAAc;EACrC,OAAOR,MAAM,CAAC,mBAAmB,EAAE,2BAA2B,CAAC;AACjE,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMS,YAAY,GAAGA,CAAA,KAAc;EACxC,OAAOT,MAAM,CAAC,sBAAsB,EAAE,uBAAuB,CAAC;AAChE,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMU,aAAa,GAAGA,CAAA,KAAe;EAC1C,OAAON,OAAO,CAACC,GAAG,CAACM,QAAQ,KAAK,aAAa;AAC/C,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAe;EACzC,OAAOR,OAAO,CAACC,GAAG,CAACM,QAAQ,KAAK,YAAY;AAC9C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}