{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { GeminiContext } from '../context/GeminiContext';\nexport const useGemini = () => {\n  _s();\n  const context = useContext(GeminiContext);\n  if (!context) {\n    throw new Error('useGemini must be used within a GeminiProvider');\n  }\n  return context;\n};\n_s(useGemini, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");","map":{"version":3,"names":["useContext","GeminiContext","useGemini","_s","context","Error"],"sources":["C:/Users/alamk/OneDrive/Desktop/Chatbot/chatbot-app/src/hooks/useGemini.ts"],"sourcesContent":["import { useContext } from 'react';\r\nimport { GeminiContext } from '../context/GeminiContext';\r\n\r\nexport const useGemini = () => {\r\n  const context = useContext(GeminiContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useGemini must be used within a GeminiProvider');\r\n  }\r\n  \r\n  return context;\r\n}; "],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,aAAa,QAAQ,0BAA0B;AAExD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,OAAO,GAAGJ,UAAU,CAACC,aAAa,CAAC;EAEzC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACnE;EAEA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CARWD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}